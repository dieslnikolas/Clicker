param (
    [Parameter(ValueFromPipeline = $true)]$data
)

# inicializace builderu
Initialize-Builder

# generated
Get-GenerateLine $data

$lowerName = [Regex]::Replace($data.Metadata.Name , '\b.', {  $args[0].Value.Tolower() })
$lowerPluralName = [Regex]::Replace($data.Metadata.PluralName , '\b.', {  $args[0].Value.Tolower() })

# hlavicka
Add-Line('namespace {0}.ViewModels.{2}' -f $data.Metadata.AppNamespace, $data.Metadata.Modules, $data.Metadata.Name)
Add-Line('{')

# usingy
Add-Line('    using Common;')
Add-Line('    using DevExpress.Mvvm;')
Add-Line('    using DevExpress.Mvvm.DataAnnotations;')
Add-Line('    using DevExpress.Mvvm.POCO;')
Add-Line('    using Context.Contract;')
Add-Line('    using {0}.ApiClient.Advanced;' -f $data.Metadata.DataServiceNamespace, $data.Metadata.Modules, $data.Metadata.Name)
Add-Line('    using IT2021.Main.ExceptionHandling;')
Add-Line('    using Localization;')
Add-Line('    using System;')
Add-Line('    using System.Collections.Generic;')
Add-Line('    using System.Threading.Tasks;')
Add-Line('    using Utils = Utils;')

Add-Line('')

Add-Line('    /// <summary>')
Add-Line('    /// Detail ViewModel for {0}' -f $data.Metadata.Name)
Add-Line('    /// <seealso cref="{0}.ViewModels.CommonTabViewModel" />' -f $data.Metadata.AppNamespace, $data.Metadata.Modules, $data.Metadata.Name)
Add-Line('    /// </summary>')
Add-Line('    [POCOViewModel]')
Add-Line('    public class {1}{0}DetailViewModel : CommonTabViewModel' -f $data.Metadata.Name, $data.Metadata.Prefix)
Add-Line('    {')

# property
Add-Line('        private readonly I{0}Context context;' -f $data.Metadata.Name)
Add-Line('')
Add-Line('        private I{0}ParentDetailViewModel {0}ParentDetailViewModel => ParentVm as I{0}ParentDetailViewModel;' -f $data.Metadata.Name)
Add-Line('')
Add-Line('        public Output{0}ModuleModel Model => ParentVm.ModulBaseModel as Output{0}ModuleModel;' -f $data.Metadata.Name)
Add-Line('')
Add-Line('        public static {0}DetailViewModel Create(I{0}Context context) => ViewModelSource.Create(() => new {0}DetailViewModel(context));' -f $data.Metadata.Name)
Add-Line('')

# konstruktor
Add-Line('        protected {0}DetailViewModel(I{0}Context context)' -f $data.Metadata.Name)
Add-Line('        {') 
Add-Line('          this.context = context;')
Add-Line('        }')

Add-Line('')

# metody
Add-Line('        private void FillDetailModel(Output{0}ModuleModel moduleModel, ISet<{0}ModuleInclude> includes)' -f $data.Metadata.Name)
Add-Line('        {')
Add-Line('            {0}ParentDetailViewModel.FillModuleModel(moduleModel, includes);' -f $data.Metadata.Name)
Add-Line('        }')
Add-Line('')
Add-Line('        /// <inheritdoc />')
Add-Line('        public override async Task BaseModelLoadingAsync()')
Add-Line('        {')
Add-Line('            try')
Add-Line('            {')
Add-Line('                if ({0}ParentDetailViewModel.DetailParameter.Mode == WindowMode.New)' -f $data.Metadata.Name)
Add-Line('                {')
Add-Line('                    var includes = new HashSet<{0}ModuleInclude> {{ {0}ModuleInclude.{0} }};' -f $data.Metadata.Name)
Add-Line('')
Add-Line('                    var new{0} = new Output{0}ModuleModel()' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        {0} = new Output{0}Model()' -f $data.Metadata.Name)
Add-Line('                        {')
Add-Line('                            CompanyId = Utils.CurrentCompany.CompanyId')
Add-Line('                        }')
Add-Line('                    };')
Add-Line('')
Add-Line('                    new{0}.SetInitialValidationState();' -f $data.Metadata.Name)
Add-Line('                    FillDetailModel(new{0}, includes);' -f $data.Metadata.Name)
Add-Line('                    return;')
Add-Line('                }')
Add-Line('')
Add-Line('                if (!{0}ParentDetailViewModel.DetailParameter.PrimaryKey.HasValue)' -f $data.Metadata.Name)
Add-Line('                {')
Add-Line('                    throw new ArgumentException("DetailParameter.PrimaryKey does not contain value.",')
Add-Line('                        nameof(DetailParameter.PrimaryKey));')
Add-Line('                }')
Add-Line('')
Add-Line('                if ({0}ParentDetailViewModel.DetailParameter.Mode == WindowMode.Read ||' -f $data.Metadata.Name)
Add-Line('                    {0}ParentDetailViewModel.DetailParameter.Mode == WindowMode.Edit)' -f $data.Metadata.Name)
Add-Line('                {')
Add-Line('                    var includes = new HashSet<{0}ModuleInclude>' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        {0}ModuleInclude.{0}' -f $data.Metadata.Name)
Add-Line('                    };')
Add-Line('')
Add-Line('                    var includesToDownload = {0}ParentDetailViewModel.GetModuleIncludesToDownload(includes);' -f $data.Metadata.Name)
Add-Line('')
Add-Line('                    var apiResponse = await context.{0}Client.GetByIdAsync({0}ParentDetailViewModel.DetailParameter.PrimaryKey ?? Guid.Empty, includesToDownload, Utils.CurrentLanguageId, deleted: {0}ParentDetailViewModel.DetailParameter.Deleted);' -f $data.Metadata.Name)
Add-Line('')
Add-Line('                    if (Utils.ShowError(apiResponse, "context.{0}Client.GetByIdAsync"))' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        return;')
Add-Line('                    }')
Add-Line('')
Add-Line('                    FillDetailModel(apiResponse.Result, includesToDownload);')
Add-Line('                }')
Add-Line('')
Add-Line('')
Add-Line('                if (ParentVm.DetailParameter.Mode == WindowMode.History)' -f $data.Metadata.Name)
Add-Line('                {')
Add-Line('                    if (!ParentVm.DetailParameter.HistoryDate.HasValue)' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        throw new ArgumentException("DetailParameter.HistoryDate does not contain value.", nameof(Common.DetailParameter.HistoryDate));' -f $data.Metadata.Name)
Add-Line('                    };')
Add-Line('')
Add-Line('                    var includes = new HashSet<{0}ModuleInclude>' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        {0}ModuleInclude.{0}' -f $data.Metadata.Name)
Add-Line('                    };')
Add-Line('')
Add-Line('                    var apiResponse = await context.{0}Client.GetByIdAsync({0}ParentDetailViewModel.DetailParameter.PrimaryKey ?? Guid.Empty, includes, Utils.CurrentLanguageId, deleted: {0}ParentDetailViewModel.DetailParameter.Deleted);' -f $data.Metadata.Name)
Add-Line('')
Add-Line('                    if (Utils.ShowError(apiResponse, "context.{0}Client.GetByIdAsync"))' -f $data.Metadata.Name)
Add-Line('                    {')
Add-Line('                        return;')
Add-Line('                    }')
Add-Line('')
Add-Line('                    FillDetailModel(apiResponse.Result, includes);')
Add-Line('                }')
Add-Line('            }')
Add-Line('            catch (Exception e)')
Add-Line('            {')
Add-Line('                e.ThrowOnDispatcher();')
Add-Line('            }')
Add-Line('        }')

Add-Line('')

Add-Line('        /// <inheritdoc />')
Add-Line('        public override bool TabValidate()')
Add-Line('        {')
Add-Line('            if (!Model.ValidateModelOnEveryChange)')
Add-Line('            {')
Add-Line('                return true;')
Add-Line('            }')
Add-Line('')
Add-Line('            HasErrors = !Model.ValidateModel();')
Add-Line('')
Add-Line('            return !HasErrors;')
Add-Line('        }')

Add-Line('')

Add-Line('        /// <inheritdoc />')
Add-Line('        public Task Loaded()')
Add-Line('        {')
Add-Line('            return Task.CompletedTask;')
Add-Line('        }')

Add-Line('')

Add-Line('        /// <inheritdoc />')
Add-Line('        public void SetPermission() { }')

Add-Line('')
Add-Line('')

# ukonceni tridy 
Add-Line('    }')
Add-Line('}')

# vypisu builder do hostu
Out-Builder